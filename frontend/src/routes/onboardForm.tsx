import { IsUserAuthenticated } from "../components/authentication";
import { data, Form } from "react-router";
import { Dropdown, InputField }  from "../components/FormComponents";
import { useState } from "react"


export async function loader({ params, request }: any){
  const responseData = await IsUserAuthenticated(request);

  if (responseData.clientResponse.success){
    if (params.clientName){
      // Do processing to get and return the existing data to the client to continue the form where they left off.
      // This should be stored in the cookies so that they can continue through the pages
      console.log("Params: ", params)
    } else {
      // Blank form is all they need
    }
  }

  return data(responseData.clientResponse, {
    headers: [...responseData.headers],
  });
}

// This should have stuff like the forwards and back arrows etc, save button, etc.
// If save button is pressed it needs to send an action to the relevant page so that it takes data and uploads it to the db.
// This will also have a complete button and whenever it's pressed it'll make sure the current page saves then it'll redirect you to the home page.
// Will need to make sure that before any re-render that the data is saved so they don't lose data because of authentication
function OnboardForm( { loaderData }: any ){
  // All state passed into this, when button is clicked it all goes to that for processing.
  const [formState, updateFormState] = useState({});
  
  if (loaderData.success){
    return(
      <>
        <p className="requiredField">Fields marked with * are required</p>
        <Form action="" method="post">
          <Dropdown name="clientType" label="Client Type:" options={["Individual", "Company"]}  updateState={updateFormState} formState={formState} required={true}/>
          {/* Office */}
          <Dropdown name="office" label="Office:" options={["Norwich"]} updateState={updateFormState} formState={formState} required={true} />

          <Dropdown name="department" label="Department:" options={["Business"]} updateState={updateFormState} formState={formState} required={true}/>

          <Dropdown name="partner" label="Partner:" options={["Generated by db request"]} updateState={updateFormState} formState={formState} required={true}/>

          <InputField name="manager" label="Manager:" updateState={updateFormState} formState={formState}/> 

          <InputField name="caseWorker" label="Case Worker:" updateState={updateFormState} formState={formState}/>

          {/* These buttons need to make the call to store the current fields in the database. */}
          <button className="previousButton">Previous</button>
          <button className="nextButton" type="button" onClick={() => console.log(formState)}>Next</button>
        </Form>
        
      </>
    )
  } 
  return (<p>Please log in to access this page</p>)
}

export default OnboardForm
